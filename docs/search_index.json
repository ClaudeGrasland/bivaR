[["01-presentation.html", "Partie 1 PRINCIPES DU LANGAGE R 1.1 Opérations arithmétiques 1.2 Les objets de base : valeur, vecteur, matrice 1.3 Ne pas confondre listes et vecteurs ! 1.4 Attention aux types de variables … 1.5 Types de tableaux et guerres de religion. 1.6 1.6 En résumé", " Partie 1 PRINCIPES DU LANGAGE R 1.1 Opérations arithmétiques Nous allons commencer par passer quelques commandes arithmétiques simples. Il suffit de les taper dans la console de R pour qu’elles s’executent automatiquement. 8+2 ## [1] 10 8-2 ## [1] 6 8*2 ## [1] 16 8/2 ## [1] 4 8**2 ## [1] 64 8**(1/2) ## [1] 2.828427 log(10) ## [1] 2.302585 log10(10) ## [1] 1 sqrt(10) ## [1] 3.162278 sin(pi) ## [1] 1.224647e-16 cos(pi) ## [1] -1 tan(pi) ## [1] -1.224647e-16 1.2 Les objets de base : valeur, vecteur, matrice Les objets R apparaissent dans la fenêtre environnement (en haut à droite). Il peut s’agir : de valeurs élémentaires de vecteurs de matrices # constantes x &lt;- 8 y &lt;- 4 x+y ## [1] 12 x*y ## [1] 32 x**y ## [1] 4096 # vecteurs x &lt;- c(1,2,4,8,16) y &lt;- 4 x+y ## [1] 5 6 8 12 20 x*y ## [1] 4 8 16 32 64 x**y ## [1] 1 16 256 4096 65536 # matrices x1 &lt;- c(1,2,4,8,16) x2 &lt;- c(5,10,15,20,25) m1 &lt;- cbind(x1,x2) m1 ## x1 x2 ## [1,] 1 5 ## [2,] 2 10 ## [3,] 4 15 ## [4,] 8 20 ## [5,] 16 25 m2 &lt;- rbind(x1,x2) m2 ## [,1] [,2] [,3] [,4] [,5] ## x1 1 2 4 8 16 ## x2 5 10 15 20 25 # piège ! m3 &lt;- c(x1,x2) m3 ## [1] 1 2 4 8 16 5 10 15 20 25 is.matrix(m3) ## [1] FALSE 1.3 Ne pas confondre listes et vecteurs ! R utilise des types plus complexes d’objets qui lui sont propres et qui sont en général des listes ou des listes de listes. liste simple liste de liste listes de vecteur = data.frame … # Format vecteur prenom &lt;- c(&quot;Ali&quot;, &quot;Amine&quot;, &quot;Anne&quot;,&quot;Marc&quot;,&quot;Zayneb&quot;) sexe &lt;- c(&quot;H&quot;,&quot;H&quot;,&quot;F&quot;,&quot;H&quot;,&quot;F&quot;) age &lt;- c(21,22,24,18,25) # Format liste Ali &lt;- list(&quot;H&quot;,21) Amine &lt;- list(&quot;F&quot;,22) Anne &lt;- list(&quot;F&quot;,28) Marc &lt;- list (&quot;H&quot;,18) Zayneb &lt;- list(&quot;F&quot;,25) # Ne pas confondre ! Ali &lt;- c(&quot;H&quot;,21) Ali ## [1] &quot;H&quot; &quot;21&quot; Ali &lt;- list(&quot;H&quot;,21) Ali ## [[1]] ## [1] &quot;H&quot; ## ## [[2]] ## [1] 21 1.4 Attention aux types de variables … Chaque valeur, vecteur ou matrice appartient à un seul type de données. Il est important de ne pas les confondre, sous peine d’obtenir des résultats … douteux. On se limitera ici aux principaux types, d’autres étant vus ultérieurement dans l’année : numeric : type général (entier, réels, …) logique : type booleen (TRUE/FALSE) date : année, mois, jour,n heure, minutes, secondes, … character : texte quelconque factor : variable catégorielle (codage d’enquêtes …) la commande str() permet de vérifier le type d’un vecteur (ou d’une matrice) # Format charactère prenom &lt;- c(&quot;Ali&quot;, &quot;Amine&quot;,&quot;Anne&quot;, &quot;Marc&quot;,&quot;Zayneb&quot;) str(prenom) ## chr [1:5] &quot;Ali&quot; &quot;Amine&quot; &quot;Anne&quot; &quot;Marc&quot; &quot;Zayneb&quot; # Format logique likeR &lt;- c(TRUE,FALSE, TRUE, FALSE, FALSE) str(likeR) ## logi [1:5] TRUE FALSE TRUE FALSE FALSE # Format Factor sexe &lt;- c(1,1,2,1,2) sexe&lt;-as.factor(sexe) levels(sexe) &lt;-c(&quot;Homme&quot;,&quot;Femme&quot;) str(sexe) ## Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 1 1 2 1 2 # Format numerique age &lt;- c(21,22,24,18,25) str(age) ## num [1:5] 21 22 24 18 25 # Format date nais&lt;-c(&quot;1999-10-28&quot;,&quot;1998-10-13&quot;, &quot;1996-10-15&quot;,&quot;2002-02-07&quot;,&quot;1995-06-18&quot;) nais&lt;-as.Date(nais) str(nais) ## Date[1:5], format: &quot;1999-10-28&quot; &quot;1998-10-13&quot; &quot;1996-10-15&quot; &quot;2002-02-07&quot; &quot;1995-06-18&quot; # Création d&#39;un data.frame tab&lt;-data.frame(prenom,nais, age,sexe,likeR) tab ## prenom nais age sexe likeR ## 1 Ali 1999-10-28 21 Homme TRUE ## 2 Amine 1998-10-13 22 Homme FALSE ## 3 Anne 1996-10-15 24 Femme TRUE ## 4 Marc 2002-02-07 18 Homme FALSE ## 5 Zayneb 1995-06-18 25 Femme FALSE str(tab) ## &#39;data.frame&#39;: 5 obs. of 5 variables: ## $ prenom: chr &quot;Ali&quot; &quot;Amine&quot; &quot;Anne&quot; &quot;Marc&quot; ... ## $ nais : Date, format: &quot;1999-10-28&quot; &quot;1998-10-13&quot; ... ## $ age : num 21 22 24 18 25 ## $ sexe : Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 1 1 2 1 2 ## $ likeR : logi TRUE FALSE TRUE FALSE FALSE 1.5 Types de tableaux et guerres de religion. R est un langage qui a beaucouop évolué au cours du temps, suscitant l’apparition de nouveaux types d’objets mieux adapéts à certaines fonctions. Du coup, il existe plusieurs format de tableaux de données, plus ou moins compatibles entre eux… data.frame : c’est le type d’origine correspondant à ce qu’on appelle le langage R-Base tibble : c’est un type créé par Hadley Wickham pour développer la suite de fonctions Tidyverse ou ggplot data.table : c’est un type récent créé pour traiter les tableaux de très grande taille à l’aide du package … data.table date : année, mois, jour,n heure, minutes, secondes, … character : texte quelconque factor : variable catégorielle (codage d’enquêtes …) # Création des variables prenom &lt;- c(&quot;Ali&quot;, &quot;Amine&quot;,&quot;Anne&quot;, &quot;Marc&quot;,&quot;Zayneb&quot;) likeR &lt;- c(TRUE,FALSE, TRUE, FALSE, FALSE) sexe &lt;- c(1,1,2,1,2) sexe&lt;-as.factor(sexe) levels(sexe) &lt;-c(&quot;Homme&quot;,&quot;Femme&quot;) age &lt;- c(21,22,24,18,25) nais&lt;-c(&quot;1999-10-28&quot;,&quot;1998-10-13&quot;,&quot;1996-10-15&quot;,&quot;2002-02-07&quot;,&quot;1995-06-18&quot;) nais&lt;-as.Date(nais) # Création d&#39;un data.frame tab&lt;-data.frame(prenom,nais, age,sexe,likeR) str(tab) ## &#39;data.frame&#39;: 5 obs. of 5 variables: ## $ prenom: chr &quot;Ali&quot; &quot;Amine&quot; &quot;Anne&quot; &quot;Marc&quot; ... ## $ nais : Date, format: &quot;1999-10-28&quot; &quot;1998-10-13&quot; ... ## $ age : num 21 22 24 18 25 ## $ sexe : Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 1 1 2 1 2 ## $ likeR : logi TRUE FALSE TRUE FALSE FALSE # Création d&#39;un tibble library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.4 ✓ dplyr 1.0.2 ## ✓ tidyr 1.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() tab&lt;-data_frame(prenom,nais, age,sexe,likeR) ## Warning: `data_frame()` was deprecated in tibble 1.1.0. ## Please use `tibble()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. str(tab) ## tibble [5 × 5] (S3: tbl_df/tbl/data.frame) ## $ prenom: chr [1:5] &quot;Ali&quot; &quot;Amine&quot; &quot;Anne&quot; &quot;Marc&quot; ... ## $ nais : Date[1:5], format: &quot;1999-10-28&quot; &quot;1998-10-13&quot; ... ## $ age : num [1:5] 21 22 24 18 25 ## $ sexe : Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 1 1 2 1 2 ## $ likeR : logi [1:5] TRUE FALSE TRUE FALSE FALSE # Création d&#39;un data.table library(data.table) ## ## Attaching package: &#39;data.table&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## between, first, last ## The following object is masked from &#39;package:purrr&#39;: ## ## transpose tab&lt;-data.table(prenom,nais, age,sexe,likeR) str(tab) ## Classes &#39;data.table&#39; and &#39;data.frame&#39;: 5 obs. of 5 variables: ## $ prenom: chr &quot;Ali&quot; &quot;Amine&quot; &quot;Anne&quot; &quot;Marc&quot; ... ## $ nais : Date, format: &quot;1999-10-28&quot; &quot;1998-10-13&quot; ... ## $ age : num 21 22 24 18 25 ## $ sexe : Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 1 1 2 1 2 ## $ likeR : logi TRUE FALSE TRUE FALSE FALSE ## - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt; 1.6 1.6 En résumé R est un langage de programmation multifonction qui évolue depuis maintenant plus de 30 ans et auquel s’ajoutent continuellement de nouveaux packages. A la différence de SPSS, il n’est pas spécialisé uniquement en statistique, même si le coeur du logiciel est bien centré sur la statistique. Pour progresser rapidement en R il est indispensable : de prêter une grande attention aux types de variables et de tableaux. de ne pas chercher à utiliser trop vite de nouveaux packages tant que l’on n’a pas acquis une pratique suffisante du R-Base. de consulter la documentation et les forums de discussion en cas de difficulté. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
